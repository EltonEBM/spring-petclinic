name: Deploy to production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Check Tag
      id: check_tag
      run: |
        TAG=${{ github.event.inputs.version }}
        echo "Checking tag $TAG..."

        # Fetch all tags
        git fetch --tags

        # Check if the tag exists
        if git rev-parse "$TAG" >/dev/null 2>&1; then
          echo "Tag $TAG exists."
          echo "version_exists=true" >> $GITHUB_ENV
        else
          echo "Tag $TAG does not exist."
          echo "version_exists=false" >> $GITHUB_ENV
        fi

    - name: Print version_exists
      run: echo "version_exists=${{ env.version_exists }}"

    - name: Load SSH Keys
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.MAIN_KEY }}

    - name: Deploy with SSH
      if: env.version_exists == 'true'
      run: |
        echo "Deploying version ${{ github.event.inputs.version }} to production..."
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.MAIN_IP }} << EOF
          # Check if Docker is installed, install if not
          if ! command -v docker &> /dev/null
          then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
          fi

          # Stop and remove previous container
          docker stop spring-petclinic || true
          docker rm spring-petclinic || true

          # Pull new image
          sudo docker pull ghcr.io/eltonebm/spring-petclinic:${{ github.event.inputs.version }}

          # Run new container
          sudo docker run -d --name spring-petclinic -p 8080:8080 ghcr.io/eltonebm/spring-petclinic:${{ github.event.inputs.version }}

          echo "Deployment successful."
        EOF

    - name: Deployment Failed
      if: env.version_exists == 'false'
      run: |
        echo "Deployment failed. Tag ${{ github.event.inputs.version }} does not exist."
