name: CI/CD Pipeline for Spring Petclinic

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: spring-petclinic

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build the application
        run: ./mvnw clean package

      - name: Log in to Amazon ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest 908576484718.dkr.ecr.us-east-1.amazonaws.com/spring-petclinic:latest

      - name: Push to ECR
        run: |
          docker push 908576484718.dkr.ecr.us-east-1.amazonaws.com/spring-petclinic:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Create .kube directory
        run: |
          mkdir -p $HOME/.kube

      - name: Create kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Delete old pods if exist
        run: |
          kubectl delete pod -l app=spring-petclinic --ignore-not-found=true

      - name: Apply Kubernetes deployment
        run: |
          kubectl apply -f - <<EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: spring-petclinic
            labels:
              app: spring-petclinic
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: spring-petclinic
            template:
              metadata:
                labels:
                  app: spring-petclinic
              spec:
                containers:
                - name: spring-petclinic
                  image: 908576484718.dkr.ecr.us-east-1.amazonaws.com/spring-petclinic:latest
                  ports:
                  - containerPort: 8080
            progressDeadlineSeconds: 3600  # Timeout increased
          EOF

      - name: Update Kubernetes deployment image
        run: |
          kubectl set image deployment/spring-petclinic spring-petclinic=908576484718.dkr.ecr.us-east-1.amazonaws.com/spring-petclinic:latest

      - name: Apply Kubernetes service
        run: |
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Service
          metadata:
            name: spring-petclinic-service
          spec:
            selector:
              app: spring-petclinic
            ports:
              - protocol: TCP
                port: 80
                targetPort: 8080
            type: LoadBalancer
          EOF
