name: Maven Cache Optimized Pipeline

on:
  push:
    branches:
      - main  # Runs pipeline on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies to speed up future builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository   # Cache Maven's local repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Cache key based on OS and pom.xml
          restore-keys: |
            ${{ runner.os }}-maven-  # Restore from closest matching cache if an exact match is unavailable

      # Step 4: Cache build output (target directory)
      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: target  # Cache the target directory (output of Maven build)
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('**/src/**') }}  # Cache key based on OS, pom.xml, and source code
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}  # Restore from cache if pom.xml matches

      # Step 5: Build the Maven project
      - name: Build the application
        run: ./mvnw clean package

      # Step 6: Display the Maven version and build summary (Optional)
      - name: Display Maven version
        run: ./mvnw --version
