name: CI Pipeline

on:
  push:
    branches:
      - 'feature/*'  # Runs on branches starting with 'feature/'
  pull_request:
    branches:
      - '*'  # Runs on pull requests targeting any branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Verify project is working
        run: mvn verify

      - name: Deploy to EC2
        env:
          FEATURE_IP: ${{ secrets.3.86.193.186 }}  # EC2 instance IP from secrets
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}  # SSH private key from secrets
        run: |
          # Install SSH client
          sudo apt-get update
          sudo apt-get install -y openssh-client

          # Create SSH key directory and add the private key
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add EC2 instance to known hosts to prevent SSH authenticity warning
          ssh-keyscan -H $3.86.193.186 >> ~/.ssh/known_hosts

          # Copy the built JAR file to the EC2 instance
          scp -i ~/.ssh/id_rsa target/*.jar ubuntu@$3.86.193.186:/home/ubuntu/spring-petclinic.jar

          # Restart the application on the EC2 instance
          ssh -i ~/.ssh/id_rsa ubuntu@$3.86.193.186 << 'EOF'
            # Stop any running application (if applicable)
            sudo systemctl stop spring-petclinic || true

            # Replace the old JAR file with the new one
            sudo cp /home/ubuntu/spring-petclinic.jar /opt/spring-petclinic/spring-petclinic.jar

            # Start the application with the CMD
            sudo systemctl start spring-petclinic
            sudo nohup java -jar /opt/spring-petclinic/spring-petclinic.jar &
          EOF

      - name: Verify Deployment
        env:
          FEATURE_IP: ${{ secrets.3.86.193.186 }}  # EC2 instance IP from secrets
        run: |
          # Check if the application is accessible
          curl -sSf http://$3.86.193.186:8080 || (echo "Application not accessible" && exit 1)
